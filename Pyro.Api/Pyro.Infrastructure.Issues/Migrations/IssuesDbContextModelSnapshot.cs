// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pyro.Infrastructure.Issues.DataAccess;

#nullable disable

namespace Pyro.Infrastructure.Issues.Migrations
{
    [DbContext(typeof(IssuesDbContext))]
    partial class IssuesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Pyro.Domain.Issues.GitRepository", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK_GitRepository");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_GitRepository_Name");

                    b.ToTable("GitRepositories", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Pyro.Domain.Issues.Issue", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("AssigneeId")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("AuthorId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IssueNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RepositoryId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK_Issue");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RepositoryId", "IssueNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Issue_RepositoryId_Number");

                    b.ToTable("Issue", (string)null);
                });

            modelBuilder.Entity("Pyro.Domain.Issues.IssueComment", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("AuthorId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("IssueId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id")
                        .HasName("PK_IssueComment");

                    b.HasIndex("AuthorId");

                    b.HasIndex("IssueId");

                    b.ToTable("IssueComments", (string)null);
                });

            modelBuilder.Entity("Pyro.Domain.Issues.User", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK_UserProfile");

                    b.ToTable("UserProfiles", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Pyro.Infrastructure.Issues.DataAccess.Configurations.IssueNumberTrackerConfiguration+IssueNumberTracker", b =>
                {
                    b.Property<byte[]>("RepositoryId")
                        .HasColumnType("BLOB");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("RepositoryId")
                        .HasName("PK_IssueNumberTracker");

                    b.ToTable("IssueNumberTracker", (string)null);
                });

            modelBuilder.Entity("Pyro.Domain.Issues.Issue", b =>
                {
                    b.HasOne("Pyro.Domain.Issues.User", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Pyro.Domain.Issues.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pyro.Domain.Issues.GitRepository", "Repository")
                        .WithMany()
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Author");

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("Pyro.Domain.Issues.IssueComment", b =>
                {
                    b.HasOne("Pyro.Domain.Issues.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pyro.Domain.Issues.Issue", "Issue")
                        .WithMany("Comments")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("Pyro.Infrastructure.Issues.DataAccess.Configurations.IssueNumberTrackerConfiguration+IssueNumberTracker", b =>
                {
                    b.HasOne("Pyro.Domain.Issues.GitRepository", null)
                        .WithMany()
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IssueNumberTracker_Repository");
                });

            modelBuilder.Entity("Pyro.Domain.Issues.Issue", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
