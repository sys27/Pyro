// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Pyro.Infrastructure.Issues.Migrations
{
    /// <inheritdoc />
    public partial class AddIssueChangeLogs : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<bool>(
                name: "IsDisabled",
                table: "IssueStatuses",
                type: "INTEGER",
                nullable: false,
                defaultValue: false);

            migrationBuilder.CreateTable(
                name: "IssueAssigneeChangeLogs",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "TEXT", nullable: false),
                    IssueId = table.Column<Guid>(type: "TEXT", nullable: false),
                    AuthorId = table.Column<Guid>(type: "TEXT", nullable: false),
                    CreatedAt = table.Column<long>(type: "INTEGER", nullable: false),
                    OldAssigneeId = table.Column<Guid>(type: "TEXT", nullable: true),
                    NewAssigneeId = table.Column<Guid>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_IssueChangeLog", x => x.Id);
                    table.ForeignKey(
                        name: "FK_IssueAssigneeChangeLogs_Issues_IssueId",
                        column: x => x.IssueId,
                        principalTable: "Issues",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueAssigneeChangeLogs_UserProfiles_AuthorId",
                        column: x => x.AuthorId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueAssigneeChangeLogs_UserProfiles_NewAssigneeId",
                        column: x => x.NewAssigneeId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueAssigneeChangeLogs_UserProfiles_OldAssigneeId",
                        column: x => x.OldAssigneeId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "IssueLabelChangeLogs",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "TEXT", nullable: false),
                    IssueId = table.Column<Guid>(type: "TEXT", nullable: false),
                    AuthorId = table.Column<Guid>(type: "TEXT", nullable: false),
                    CreatedAt = table.Column<long>(type: "INTEGER", nullable: false),
                    OldLabelId = table.Column<Guid>(type: "TEXT", nullable: true),
                    NewLabelId = table.Column<Guid>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_IssueChangeLog", x => x.Id);
                    table.ForeignKey(
                        name: "FK_IssueLabelChangeLogs_Issues_IssueId",
                        column: x => x.IssueId,
                        principalTable: "Issues",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueLabelChangeLogs_Labels_NewLabelId",
                        column: x => x.NewLabelId,
                        principalTable: "Labels",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueLabelChangeLogs_Labels_OldLabelId",
                        column: x => x.OldLabelId,
                        principalTable: "Labels",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueLabelChangeLogs_UserProfiles_AuthorId",
                        column: x => x.AuthorId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "IssueLockChangeLogs",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "TEXT", nullable: false),
                    IssueId = table.Column<Guid>(type: "TEXT", nullable: false),
                    AuthorId = table.Column<Guid>(type: "TEXT", nullable: false),
                    CreatedAt = table.Column<long>(type: "INTEGER", nullable: false),
                    OldValue = table.Column<bool>(type: "INTEGER", nullable: false),
                    NewValue = table.Column<bool>(type: "INTEGER", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_IssueChangeLog", x => x.Id);
                    table.ForeignKey(
                        name: "FK_IssueLockChangeLogs_Issues_IssueId",
                        column: x => x.IssueId,
                        principalTable: "Issues",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueLockChangeLogs_UserProfiles_AuthorId",
                        column: x => x.AuthorId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "IssueStatusChangeLogs",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "TEXT", nullable: false),
                    IssueId = table.Column<Guid>(type: "TEXT", nullable: false),
                    AuthorId = table.Column<Guid>(type: "TEXT", nullable: false),
                    CreatedAt = table.Column<long>(type: "INTEGER", nullable: false),
                    OldStatusId = table.Column<Guid>(type: "TEXT", nullable: true),
                    NewStatusId = table.Column<Guid>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_IssueChangeLog", x => x.Id);
                    table.ForeignKey(
                        name: "FK_IssueStatusChangeLogs_IssueStatuses_NewStatusId",
                        column: x => x.NewStatusId,
                        principalTable: "IssueStatuses",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueStatusChangeLogs_IssueStatuses_OldStatusId",
                        column: x => x.OldStatusId,
                        principalTable: "IssueStatuses",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueStatusChangeLogs_Issues_IssueId",
                        column: x => x.IssueId,
                        principalTable: "Issues",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueStatusChangeLogs_UserProfiles_AuthorId",
                        column: x => x.AuthorId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "IssueTitleChangeLog",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "TEXT", nullable: false),
                    IssueId = table.Column<Guid>(type: "TEXT", nullable: false),
                    AuthorId = table.Column<Guid>(type: "TEXT", nullable: false),
                    CreatedAt = table.Column<long>(type: "INTEGER", nullable: false),
                    OldValue = table.Column<string>(type: "TEXT", nullable: true),
                    NewValue = table.Column<string>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_IssueChangeLog", x => x.Id);
                    table.ForeignKey(
                        name: "FK_IssueTitleChangeLog_Issues_IssueId",
                        column: x => x.IssueId,
                        principalTable: "Issues",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_IssueTitleChangeLog_UserProfiles_AuthorId",
                        column: x => x.AuthorId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateIndex(
                name: "IX_IssueAssigneeChangeLogs_AuthorId",
                table: "IssueAssigneeChangeLogs",
                column: "AuthorId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueAssigneeChangeLogs_IssueId",
                table: "IssueAssigneeChangeLogs",
                column: "IssueId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueAssigneeChangeLogs_NewAssigneeId",
                table: "IssueAssigneeChangeLogs",
                column: "NewAssigneeId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueAssigneeChangeLogs_OldAssigneeId",
                table: "IssueAssigneeChangeLogs",
                column: "OldAssigneeId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueLabelChangeLogs_AuthorId",
                table: "IssueLabelChangeLogs",
                column: "AuthorId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueLabelChangeLogs_IssueId",
                table: "IssueLabelChangeLogs",
                column: "IssueId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueLabelChangeLogs_NewLabelId",
                table: "IssueLabelChangeLogs",
                column: "NewLabelId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueLabelChangeLogs_OldLabelId",
                table: "IssueLabelChangeLogs",
                column: "OldLabelId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueLockChangeLogs_AuthorId",
                table: "IssueLockChangeLogs",
                column: "AuthorId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueLockChangeLogs_IssueId",
                table: "IssueLockChangeLogs",
                column: "IssueId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueStatusChangeLogs_AuthorId",
                table: "IssueStatusChangeLogs",
                column: "AuthorId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueStatusChangeLogs_IssueId",
                table: "IssueStatusChangeLogs",
                column: "IssueId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueStatusChangeLogs_NewStatusId",
                table: "IssueStatusChangeLogs",
                column: "NewStatusId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueStatusChangeLogs_OldStatusId",
                table: "IssueStatusChangeLogs",
                column: "OldStatusId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueTitleChangeLog_AuthorId",
                table: "IssueTitleChangeLog",
                column: "AuthorId");

            migrationBuilder.CreateIndex(
                name: "IX_IssueTitleChangeLog_IssueId",
                table: "IssueTitleChangeLog",
                column: "IssueId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "IssueAssigneeChangeLogs");

            migrationBuilder.DropTable(
                name: "IssueLabelChangeLogs");

            migrationBuilder.DropTable(
                name: "IssueLockChangeLogs");

            migrationBuilder.DropTable(
                name: "IssueStatusChangeLogs");

            migrationBuilder.DropTable(
                name: "IssueTitleChangeLog");

            migrationBuilder.DropColumn(
                name: "IsDisabled",
                table: "IssueStatuses");
        }
    }
}